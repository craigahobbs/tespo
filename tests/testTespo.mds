# Licensed under the MIT License
# https://github.com/craigahobbs/tespo/blob/main/LICENSE

include '../tespo.mds'


#
# TESPO tests
#


function testTespo_allCharged()
    unittestDeepEquals( \
        tespo(tespoValidateInput(objectNew( \
            'solarPower', 8.2, \
            'homePower', 1.4, \
            'homeBattery', 90, \
            'vehicles', arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'battery', 90, \
                    'batteryCapacity', 80, \
                    'chargingRate', 5, \
                    'chargingLimit', 50, \
                    'minChargingRate', 5, \
                    'maxChargingRate', 32, \
                    'chargingVoltage', 240 \
                ) \
            ) \
        ))), \
        objectNew( \
            'availableSolar', 6.8, \
            'spilling', true, \
            'vehicles',  arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'chargingLimit', 50, \
                    'chargingRate', 5 \
                ) \
            ) \
        ) \
    )
endfunction
unittestRunTest('testTespo_allCharged')


function testTespo_homeCharged()
    unittestDeepEquals( \
        tespo(tespoValidateInput(objectNew( \
            "solarPower", 9.9, \
            "homePower", 8.4, \
            "homeBattery", 90, \
            "vehicles", arrayNew( \
                objectNew( \
                    "id", "ID-1", \
                    "battery", 75, \
                    'batteryCapacity', 80, \
                    "chargingRate", 32, \
                    "chargingLimit", 90, \
                    "minChargingRate", 5, \
                    "maxChargingRate", 32, \
                    "chargingVoltage", 240 \
                ) \
            ) \
        ))), \
        objectNew( \
            'availableSolar', 9.18, \
            'spilling', false, \
            'vehicles',  arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'chargingLimit', 90, \
                    'chargingRate', 32 \
                ) \
            ) \
        ) \
    )
endfunction
unittestRunTest('testTespo_homeCharged')


function testTespo_homeCharged_lowSolar()
    unittestDeepEquals( \
        tespo(tespoValidateInput(objectNew( \
            'solarPower', 3.8, \
            'homePower', 9.4, \
            'homeBattery', 90, \
            'vehicles', arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'battery', 75, \
                    'batteryCapacity', 80, \
                    'chargingRate', 32, \
                    'chargingLimit', 90, \
                    'minChargingRate', 5, \
                    'maxChargingRate', 32, \
                    'chargingVoltage', 240 \
                ) \
            ) \
        ))), \
        objectNew( \
            'availableSolar', 2.08, \
            'spilling', false, \
            'vehicles',  arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'chargingLimit', 90, \
                    'chargingRate', 8 \
                ) \
            ) \
        ) \
    )
endfunction
unittestRunTest('testTespo_homeCharged_lowSolar')


function testTespo_homeCharged_medSolar()
    unittestDeepEquals( \
        tespo(tespoValidateInput(objectNew( \
            'solarPower', 5.8, \
            'homePower', 9.6, \
            'homeBattery', 90, \
            'vehicles', arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'battery', 75, \
                    'batteryCapacity', 80, \
                    'chargingRate', 32, \
                    'chargingLimit', 90, \
                    'minChargingRate', 5, \
                    'maxChargingRate', 32, \
                    'chargingVoltage', 240 \
                ) \
            ) \
        ))), \
        objectNew( \
            'availableSolar', 3.88, \
            'spilling', false, \
            'vehicles',  arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'chargingLimit', 90, \
                    'chargingRate', 16 \
                ) \
            ) \
        ) \
    )
endfunction
unittestRunTest('testTespo_homeCharged_medSolar')


function testTespo_homeCharged_zeroSolar()
    unittestDeepEquals( \
        tespo(tespoValidateInput(objectNew( \
            'solarPower', 0, \
            'homePower', 8.7, \
            'homeBattery', 90, \
            'vehicles', arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'battery', 75, \
                    'batteryCapacity', 80, \
                    'chargingRate', 32, \
                    'chargingLimit', 90, \
                    'minChargingRate', 5, \
                    'maxChargingRate', 32, \
                    'chargingVoltage', 240 \
                ) \
            ) \
        ))), \
        objectNew( \
            'availableSolar', 0, \
            'spilling', false, \
            'vehicles',  arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'chargingLimit', 50, \
                    'chargingRate', 5 \
                ) \
            ) \
        ) \
    )
endfunction
unittestRunTest('testTespo_homeCharged_zeroSolar')


function testTespo_noneCharged()
    unittestDeepEquals( \
        tespo(tespoValidateInput(objectNew( \
            'solarPower', 9.9, \
            'homePower', 0.4, \
            'homeBattery', 85, \
            'vehicles', arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'battery', 75, \
                    'batteryCapacity', 80, \
                    'chargingRate', 32, \
                    'chargingLimit', 90, \
                    'minChargingRate', 5, \
                    'maxChargingRate', 32, \
                    'chargingVoltage', 240 \
                ) \
            ) \
        ))), \
        objectNew( \
            'availableSolar', 0, \
            'spilling', false, \
            'vehicles',  arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'chargingLimit', 50, \
                    'chargingRate', 5 \
                ) \
            ) \
        ) \
    )
endfunction
unittestRunTest('testTespo_noneCharged')


function testTespo_multipleVehicles()
    unittestDeepEquals( \
        tespo(tespoValidateInput(objectNew( \
            'solarPower', 5, \
            'homePower', 2.9, \
            'homeBattery', 90, \
            'vehicles', arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'battery', 75, \
                    'batteryCapacity', 80, \
                    'chargingRate', 5, \
                    'chargingLimit', 90, \
                    'minChargingRate', 5, \
                    'maxChargingRate', 32, \
                    'chargingVoltage', 240 \
                ), \
                objectNew( \
                    'id', 'ID-2', \
                    'battery', 75, \
                    'batteryCapacity', 80, \
                    'chargingRate', 5, \
                    'chargingLimit', 90, \
                    'minChargingRate', 5, \
                    'maxChargingRate', 12, \
                    'chargingVoltage', 120 \
                ) \
            ) \
        ))), \
        objectNew( \
            'availableSolar', 3.9, \
            'spilling', false, \
            'vehicles',  arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'chargingLimit', 90, \
                    'chargingRate', 11 \
                ), \
                objectNew( \
                    'id', 'ID-2', \
                    'chargingLimit', 90, \
                    'chargingRate', 10 \
                ) \
            ) \
        ) \
    )
endfunction
unittestRunTest('testTespo_multipleVehicles')


function testTespo_multipleVehicles_allCharged()
    unittestDeepEquals( \
        tespo(tespoValidateInput(objectNew( \
            'solarPower', 5, \
            'homePower', 1.1, \
            'homeBattery', 90, \
            'vehicles', arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'battery', 90, \
                    'batteryCapacity', 80, \
                    'chargingRate', 5, \
                    'chargingLimit', 50, \
                    'minChargingRate', 5, \
                    'maxChargingRate', 32, \
                    'chargingVoltage', 240 \
                ), \
                objectNew( \
                    'id', 'ID-2', \
                    'battery', 90, \
                    'batteryCapacity', 80, \
                    'chargingRate', 5, \
                    'chargingLimit', 50, \
                    'minChargingRate', 5, \
                    'maxChargingRate', 12, \
                    'chargingVoltage', 120 \
                ) \
            ) \
        ))), \
        objectNew( \
            'availableSolar', 3.9, \
            'spilling', true, \
            'vehicles',  arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'chargingLimit', 50, \
                    'chargingRate', 5 \
                ), \
                objectNew( \
                    'id', 'ID-2', \
                    'chargingLimit', 50, \
                    'chargingRate', 5 \
                ) \
            ) \
        ) \
    )
endfunction
unittestRunTest('testTespo_multipleVehicles_allCharged')


function testTespo_multipleVehicles_oneCharged()
    unittestDeepEquals( \
        tespo(tespoValidateInput(objectNew( \
            'solarPower', 5, \
            'homePower', 2.3, \
            'homeBattery', 90, \
            'vehicles', arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'battery', 90, \
                    'batteryCapacity', 80, \
                    'chargingRate', 5, \
                    'chargingLimit', 50, \
                    'minChargingRate', 5, \
                    'maxChargingRate', 32, \
                    'chargingVoltage', 240 \
                ), \
                objectNew( \
                    'id', 'ID-2', \
                    'battery', 75, \
                    'batteryCapacity', 80, \
                    'chargingRate', 10, \
                    'chargingLimit', 90, \
                    'minChargingRate', 5, \
                    'maxChargingRate', 12, \
                    'chargingVoltage', 120 \
                ) \
            ) \
        ))), \
        objectNew( \
            'availableSolar', 3.9, \
            'spilling', false, \
            'vehicles',  arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'chargingLimit', 50, \
                    'chargingRate', 5 \
                ), \
                objectNew( \
                    'id', 'ID-2', \
                    'chargingLimit', 90, \
                    'chargingRate', 12 \
                ) \
            ) \
        ) \
    )
endfunction
unittestRunTest('testTespo_multipleVehicles_oneCharged')


function testTespo_multipleVehicles_minChargeRate()
    unittestDeepEquals( \
        tespo(tespoValidateInput(objectNew( \
            'solarPower', 3, \
            'homePower', 2.9, \
            'homeBattery', 90, \
            'vehicles', arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'battery', 75, \
                    'batteryCapacity', 80, \
                    'chargingRate', 5, \
                    'chargingLimit', 90, \
                    'minChargingRate', 5, \
                    'maxChargingRate', 32, \
                    'chargingVoltage', 240 \
                ), \
                objectNew( \
                    'id', 'ID-2', \
                    'battery', 75, \
                    'batteryCapacity', 80, \
                    'chargingRate', 5, \
                    'chargingLimit', 90, \
                    'minChargingRate', 5, \
                    'maxChargingRate', 12, \
                    'chargingVoltage', 120 \
                ) \
            ) \
        ))), \
        objectNew( \
            'availableSolar', 1.9, \
            'spilling', false, \
            'vehicles',  arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'chargingLimit', 90, \
                    'chargingRate', 5 \
                ), \
                objectNew( \
                    'id', 'ID-2', \
                    'chargingLimit', 90, \
                    'chargingRate', 5 \
                ) \
            ) \
        ) \
    )
endfunction
unittestRunTest('testTespo_multipleVehicles_minChargeRate')


function testTespo_multipleVehicles_minChargeRateSingle()
    unittestDeepEquals( \
        tespo(tespoValidateInput(objectNew( \
            'solarPower', 2.8, \
            'homePower', 2.9, \
            'homeBattery', 90, \
            'vehicles', arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'battery', 75, \
                    'batteryCapacity', 80, \
                    'chargingRate', 5, \
                    'chargingLimit', 90, \
                    'minChargingRate', 5, \
                    'maxChargingRate', 32, \
                    'chargingVoltage', 240 \
                ), \
                objectNew( \
                    'id', 'ID-2', \
                    'battery', 75, \
                    'batteryCapacity', 80, \
                    'chargingRate', 5, \
                    'chargingLimit', 90, \
                    'minChargingRate', 5, \
                    'maxChargingRate', 12, \
                    'chargingVoltage', 120 \
                ) \
            ) \
        ))), \
        objectNew( \
            'availableSolar', 1.7, \
            'spilling', false, \
            'vehicles',  arrayNew( \
                objectNew( \
                    'id', 'ID-1', \
                    'chargingLimit', 90, \
                    'chargingRate', 7 \
                ), \
                objectNew( \
                    'id', 'ID-2', \
                    'chargingLimit', 50, \
                    'chargingRate', 5 \
                ) \
            ) \
        ) \
    )
endfunction
unittestRunTest('testTespo_multipleVehicles_minChargeRateSingle')


#
# tespoValidateInput tests
#


function testTespoValidateInput()
    input = objectNew( \
        'solarPower', 2.8, \
        'homePower', 2.9, \
        'homeBattery', 90, \
        'vehicles', arrayNew( \
            objectNew( \
                'id', 'ID-1', \
                'battery', 75, \
                'batteryCapacity', 80, \
                'chargingRate', 5, \
                'chargingLimit', 90, \
                'minChargingRate', 5, \
                'maxChargingRate', 32, \
                'chargingVoltage', 240 \
            ) \
        ) \
    )
    unittestDeepEquals(tespoValidateInput(input), input)
endfunction
unittestRunTest('testTespoValidateInput')


function testTespoValidateInput_fail()
    unittestDeepEquals(tespoValidateInput(objectNew()), null)
endfunction
unittestRunTest('testTespoValidateInput_fail')


#
# tespoVehicleDeparted tests
#


function testTespoVehicleDeparted()
    unittestDeepEquals( \
        tespoVehicleDeparted( \
            objectNew( \
                'departures', arrayNew( \
                    objectNew( \
                        'id', 'ID-1', \
                        'departure', 9, \
                        'arrival', 11, \
                        'batteryPercentChange', -10 \
                    ), \
                    objectNew( \
                        'id', 'ID-1', \
                        'departure', 18, \
                        'arrival', 21, \
                        'batteryPercentChange', -20 \
                    ) \
                ) \
            ), \
            'ID-1', \
            19 \
        ), \
        objectNew( \
            'id', 'ID-1', \
            'departure', 18, \
            'arrival', 21, \
            'batteryPercentChange', -20 \
        ) \
    )
endfunction
unittestRunTest('testTespoVehicleDeparted')


function testTespoVehicleDeparted_connected()
    unittestDeepEquals( \
        tespoVehicleDeparted( \
            objectNew( \
                'departures', arrayNew( \
                    objectNew( \
                        'id', 'ID-1', \
                        'departure', 9, \
                        'arrival', 11, \
                        'batteryPercentChange', -10 \
                    ), \
                    objectNew( \
                        'id', 'ID-1', \
                        'departure', 18, \
                        'arrival', 21, \
                        'batteryPercentChange', -20 \
                    ) \
                ) \
            ), \
            'ID-1', \
            12 \
        ), \
        null \
    )
endfunction
unittestRunTest('testTespoVehicleDeparted_connected')


function testTespoVehicleDeparted_connected_id()
    unittestDeepEquals( \
        tespoVehicleDeparted( \
            objectNew( \
                'departures', arrayNew( \
                    objectNew( \
                        'id', 'ID-1', \
                        'departure', 9, \
                        'arrival', 11, \
                        'batteryPercentChange', -10 \
                    ), \
                    objectNew( \
                        'id', 'ID-1', \
                        'departure', 18, \
                        'arrival', 21, \
                        'batteryPercentChange', -20 \
                    ) \
                ) \
            ), \
            'ID-2', \
            19 \
        ), \
        null \
    )
endfunction
unittestRunTest('testTespoVehicleDeparted_connected_id')


#
# tespoValidateVehicleScenario tests
#


function testTespoValidateVehicleScenario()
    vehicleScenario = objectNew( \
        'vehicles', arrayNew( \
            objectNew( \
                'id', 'ID-1', \
                'battery', 75, \
                'batteryCapacity', 80, \
                'chargingRate', 5, \
                'chargingLimit', 90, \
                'minChargingRate', 5, \
                'maxChargingRate', 32, \
                'chargingVoltage', 240 \
            ) \
        ), \
        'days', arrayNew( \
            objectNew( \
                'departures', arrayNew( \
                    objectNew( \
                        'id', 'ID-1', \
                        'departure', 9, \
                        'arrival', 11, \
                        'batteryPercentChange', -10 \
                    ), \
                    objectNew( \
                        'id', 'ID-1', \
                        'departure', 18, \
                        'arrival', 21, \
                        'batteryPercentChange', -20 \
                    ) \
                ) \
            ) \
        ) \
    )
    unittestDeepEquals(tespoValidateVehicleScenario(vehicleScenario), vehicleScenario)
endfunction
unittestRunTest('testTespoValidateVehicleScenario')


function testTespoValidateVehicleScenario_fail()
    unittestDeepEquals(tespoValidateVehicleScenario(objectNew()), vehicleScenario)
endfunction
unittestRunTest('testTespoValidateVehicleScenario_fail')
