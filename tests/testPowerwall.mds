# Licensed under the MIT License
# https://github.com/craigahobbs/tespo/blob/main/LICENSE

include '../powerwall.mds'


#
# powerwallBatteryPercent tests
#


function testPowerwallBatteryPercent()
    unittestDeepEquals( \
        powerwallBatteryPercent( \
            objectNew( \
                'name', 'Powerwall Scenario', \
                'batteryCapacity', 40, \
                'backupPercent', 20, \
                'chargeRatio', 0.95, \
                'dischargeRatio', 0.95, \
                'data', arrayNew( \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 35), \
                        powerwallFieldHome, 0, powerwallFieldSolar, 0, powerwallFieldBatteryPercent, 50 \
                    ), \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 40), \
                        powerwallFieldHome, 0, powerwallFieldSolar, 0, powerwallFieldBatteryPercent, 52 \
                    ) \
                ) \
            ) \
        ), \
        51 \
    )
endfunction
unittestRunTest('testPowerwallBatteryPercent')


#
# powerwallSimulate tests
#


function testPowerwallSimulate_allZeroes()
    unittestDeepEquals( \
        powerwallSimulate( \
            objectNew( \
                'name', 'Powerwall Scenario', \
                'batteryCapacity', 40, \
                'backupPercent', 20, \
                'chargeRatio', 0.95, \
                'dischargeRatio', 0.95, \
                'data', arrayNew( \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 35), \
                        powerwallFieldHome, 0, powerwallFieldSolar, 0 \
                    ), \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 40), \
                        powerwallFieldHome, 0, powerwallFieldSolar, 0 \
                    ) \
                ) \
            ), \
            50 \
        ), \
        arrayNew( \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 35), \
                powerwallFieldHome, 0, powerwallFieldSolar, 0, \
                powerwallFieldGrid, 0, powerwallFieldPowerwall, 0, powerwallFieldBatteryPercent, 50 \
            ), \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 40), \
                powerwallFieldHome, 0, powerwallFieldSolar, 0, \
                powerwallFieldGrid, 0, powerwallFieldPowerwall, 0, powerwallFieldBatteryPercent, 50 \
            ) \
        ) \
    )
endfunction
unittestRunTest('testPowerwallSimulate_allZeroes')


function testPowerwallSimulate_solarSurplus()
    unittestDeepEquals( \
        powerwallSimulate( \
            objectNew( \
                'name', 'Powerwall Scenario', \
                'batteryCapacity', 40, \
                'backupPercent', 20, \
                'chargeRatio', 0.95, \
                'dischargeRatio', 0.95, \
                'data', arrayNew( \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 35), \
                        powerwallFieldHome, 0.6, powerwallFieldSolar, 6.4 \
                    ), \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 40), \
                        powerwallFieldHome, 1.2, powerwallFieldSolar, 5.5 \
                    ), \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 45), \
                        powerwallFieldHome, 0.8, powerwallFieldSolar, 6.1 \
                    ) \
                ) \
            ), \
            98.5 \
        ), \
        arrayNew( \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 35), \
                powerwallFieldHome, 0.6, powerwallFieldSolar, 6.4, \
                powerwallFieldGrid, 0, powerwallFieldPowerwall, -5.8, powerwallFieldBatteryPercent, 99.648 \
            ), \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 40), \
                powerwallFieldHome, 1.2, powerwallFieldSolar, 5.5, \
                powerwallFieldGrid, -2.521, powerwallFieldPowerwall, -1.779, powerwallFieldBatteryPercent, 100 \
            ), \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 45), \
                powerwallFieldHome, 0.8, powerwallFieldSolar, 6.1, \
                powerwallFieldGrid, -5.3, powerwallFieldPowerwall, 0, powerwallFieldBatteryPercent, 100 \
            ) \
        ) \
    )
endfunction
unittestRunTest('testPowerwallSimulate_solarSurplus')


function testPowerwallSimulate_solarSurplus_nearBackup()
    unittestDeepEquals( \
        powerwallSimulate( \
            objectNew( \
                'name', 'Powerwall Scenario', \
                'batteryCapacity', 40, \
                'backupPercent', 20, \
                'chargeRatio', 0.95, \
                'dischargeRatio', 0.95, \
                'data', arrayNew( \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 35), \
                        powerwallFieldHome, 0.6, powerwallFieldSolar, 6.4 \
                    ), \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 40), \
                        powerwallFieldHome, 1.2, powerwallFieldSolar, 5.5 \
                    ), \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 45), \
                        powerwallFieldHome, 0.8, powerwallFieldSolar, 6.1 \
                    ) \
                ) \
            ), \
            18.5 \
        ), \
        arrayNew( \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 35), \
                powerwallFieldHome, 0.6, powerwallFieldSolar, 6.4, \
                powerwallFieldGrid, 0, powerwallFieldPowerwall, -5.8, powerwallFieldBatteryPercent, 19.648 \
            ), \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 40), \
                powerwallFieldHome, 1.2, powerwallFieldSolar, 5.5, \
                powerwallFieldGrid, 0, powerwallFieldPowerwall, -4.3, powerwallFieldBatteryPercent, 20.499 \
            ), \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 45), \
                powerwallFieldHome, 0.8, powerwallFieldSolar, 6.1, \
                powerwallFieldGrid, 0, powerwallFieldPowerwall, -5.3, powerwallFieldBatteryPercent, 21.548 \
            ) \
        ) \
    )
endfunction
unittestRunTest('testPowerwallSimulate_solarSurplus_nearBackup')


function testPowerwallSimulate_solarSurplus_belowBackup()
    unittestDeepEquals( \
        powerwallSimulate( \
            objectNew( \
                'name', 'Powerwall Scenario', \
                'batteryCapacity', 40, \
                'backupPercent', 20, \
                'chargeRatio', 0.95, \
                'dischargeRatio', 0.95, \
                'data', arrayNew( \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 35), \
                        powerwallFieldHome, 0.6, powerwallFieldSolar, 6.4 \
                    ), \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 40), \
                        powerwallFieldHome, 1.2, powerwallFieldSolar, 5.5 \
                    ), \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 45), \
                        powerwallFieldHome, 0.8, powerwallFieldSolar, 6.1 \
                    ) \
                ) \
            ), \
            15 \
        ), \
        arrayNew( \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 35), \
                powerwallFieldHome, 0.6, powerwallFieldSolar, 6.4, \
                powerwallFieldGrid, 0, powerwallFieldPowerwall, -5.8, powerwallFieldBatteryPercent, 16.148 \
            ), \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 40), \
                powerwallFieldHome, 1.2, powerwallFieldSolar, 5.5, \
                powerwallFieldGrid, 0, powerwallFieldPowerwall, -4.3, powerwallFieldBatteryPercent, 16.999 \
            ), \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 45), \
                powerwallFieldHome, 0.8, powerwallFieldSolar, 6.1, \
                powerwallFieldGrid, 0, powerwallFieldPowerwall, -5.3, powerwallFieldBatteryPercent, 18.048 \
            ) \
        ) \
    )
endfunction
unittestRunTest('testPowerwallSimulate_solarSurplus_belowBackup')


function testPowerwallSimulate_solarDeficit()
    unittestDeepEquals( \
        powerwallSimulate( \
            objectNew( \
                'name', 'Powerwall Scenario', \
                'batteryCapacity', 40, \
                'backupPercent', 20, \
                'chargeRatio', 0.95, \
                'dischargeRatio', 0.95, \
                'data', arrayNew( \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 35), \
                        powerwallFieldHome, 6.4, powerwallFieldSolar, 0.6 \
                    ), \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 40), \
                        powerwallFieldHome, 5.5, powerwallFieldSolar, 1.2 \
                    ), \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 45), \
                        powerwallFieldHome, 6.1, powerwallFieldSolar, 0.8 \
                    ) \
                ) \
            ), \
            100 \
        ), \
        arrayNew( \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 35), \
                powerwallFieldHome, 6.4, powerwallFieldSolar, 0.6, \
                powerwallFieldGrid, 0, powerwallFieldPowerwall, 5.8, powerwallFieldBatteryPercent, 98.728 \
            ), \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 40), \
                powerwallFieldHome, 5.5, powerwallFieldSolar, 1.2, \
                powerwallFieldGrid, 0, powerwallFieldPowerwall, 4.3, powerwallFieldBatteryPercent, 97.785 \
            ), \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 45), \
                powerwallFieldHome, 6.1, powerwallFieldSolar, 0.8, \
                powerwallFieldGrid, 0, powerwallFieldPowerwall, 5.3, powerwallFieldBatteryPercent, 96.623 \
            ) \
        ) \
    )
endfunction
unittestRunTest('testPowerwallSimulate_solarDeficit')


function testPowerwallSimulate_solarDeficit_nearBackup()
    unittestDeepEquals( \
        powerwallSimulate( \
            objectNew( \
                'name', 'Powerwall Scenario', \
                'batteryCapacity', 40, \
                'backupPercent', 20, \
                'chargeRatio', 0.95, \
                'dischargeRatio', 0.95, \
                'data', arrayNew( \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 35), \
                        powerwallFieldHome, 6.4, powerwallFieldSolar, 0.6 \
                    ), \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 40), \
                        powerwallFieldHome, 5.5, powerwallFieldSolar, 1.2 \
                    ), \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 45), \
                        powerwallFieldHome, 6.1, powerwallFieldSolar, 0.8 \
                    ) \
                ) \
            ), \
            21.5 \
        ), \
        arrayNew( \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 35), \
                powerwallFieldHome, 6.4, powerwallFieldSolar, 0.6, \
                powerwallFieldGrid, 0, powerwallFieldPowerwall, 5.8, powerwallFieldBatteryPercent, 20.228 \
            ), \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 40), \
                powerwallFieldHome, 5.5, powerwallFieldSolar, 1.2, \
                powerwallFieldGrid, 3.26, powerwallFieldPowerwall, 1.04, powerwallFieldBatteryPercent, 20 \
            ), \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 45), \
                powerwallFieldHome, 6.1, powerwallFieldSolar, 0.8, \
                powerwallFieldGrid, 5.3, powerwallFieldPowerwall, 0, powerwallFieldBatteryPercent, 20 \
            ) \
        ) \
    )
endfunction
unittestRunTest('testPowerwallSimulate_solarDeficit_nearBackup')


function testPowerwallSimulate_solarDeficit_belowBackup()
    unittestDeepEquals( \
        powerwallSimulate( \
            objectNew( \
                'name', 'Powerwall Scenario', \
                'batteryCapacity', 40, \
                'backupPercent', 20, \
                'chargeRatio', 0.95, \
                'dischargeRatio', 0.95, \
                'data', arrayNew( \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 35), \
                        powerwallFieldHome, 6.4, powerwallFieldSolar, 0.6 \
                    ), \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 40), \
                        powerwallFieldHome, 5.5, powerwallFieldSolar, 1.2 \
                    ), \
                    objectNew( \
                        powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 45), \
                        powerwallFieldHome, 6.1, powerwallFieldSolar, 0.8 \
                    ) \
                ) \
            ), \
            15 \
        ), \
        arrayNew( \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 35), \
                powerwallFieldHome, 6.4, powerwallFieldSolar, 0.6, \
                powerwallFieldGrid, 5.8, powerwallFieldPowerwall, 0, powerwallFieldBatteryPercent, 15 \
            ), \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 40), \
                powerwallFieldHome, 5.5, powerwallFieldSolar, 1.2, \
                powerwallFieldGrid, 4.3, powerwallFieldPowerwall, 0, powerwallFieldBatteryPercent, 15 \
            ), \
            objectNew( \
                powerwallFieldDate, datetimeNew(2023, 4, 18, 4, 45), \
                powerwallFieldHome, 6.1, powerwallFieldSolar, 0.8, \
                powerwallFieldGrid, 5.3, powerwallFieldPowerwall, 0, powerwallFieldBatteryPercent, 15 \
            ) \
        ) \
    )
endfunction
unittestRunTest('testPowerwallSimulate_solarDeficit_belowBackup')


#
# powerwallLoadScenario tests
#


# Mock fetch for powerwallLoadScenario tests
function testPowerwallLoadScenario_fetch(url, options, text)
    unittestEquals(options, null)
    if url == 'scenario.json' then
        unittestEquals(text, null)
        return objectNew( \
            'name', 'Powerwall Scenario', \
            'batteryCapacity', 40, \
            'backupPercent', 20, \
            'chargeRatio', 0.95, \
            'dischargeRatio', 0.95, \
            'dataURLs', arrayNew('data1.json', 'data2.json') \
        )
    else if url == 'scenario2.json' then
        unittestEquals(text, null)
        return objectNew( \
            'name', 'Powerwall Scenario 2', \
            'batteryCapacity', 40, \
            'backupPercent', 20, \
            'chargeRatio', 0.95, \
            'dischargeRatio', 0.95, \
            'dataURLs', arrayNew('data1.json', 'data3.json', 'data2.json') \
        )
    else if url == 'data/scenario3.json' then
        unittestEquals(text, null)
        return objectNew( \
            'name', 'Powerwall Scenario 3', \
            'batteryCapacity', 40, \
            'backupPercent', 20, \
            'chargeRatio', 0.95, \
            'dischargeRatio', 0.95, \
            'dataURLs', arrayNew('data2.json') \
        )
    else if url == 'data/scenario4.json' then
        unittestEquals(text, null)
        return objectNew( \
            'name', 'Powerwall Scenario 4', \
            'batteryCapacity', 40, \
            'backupPercent', 20, \
            'chargeRatio', 0.95, \
            'dischargeRatio', 0.95, \
            'dataURLs', arrayNew('/data2.json') \
        )
    else if stringEndsWith(url, 'data1.json') then
        return 'Date time,Home (kW),Solar (kW),Powerwall (kW),Grid (kW),Energy Remaining (%)' + stringFromCharCode(10) + \
            '2023-03-25T12:10:00-07:00,1.0,4.2,-3.2,0,' + stringFromCharCode(10) + \
            '2023-03-25T12:15:00-07:00,1.0,5.6,-4.6,0,58'
    else if stringEndsWith(url, 'data2.json') then
        return 'Date time,Home (kW),Solar (kW),Powerwall (kW),Grid (kW),Energy Remaining (%)' + stringFromCharCode(10) + \
            '2023-03-25T12:00:00-07:00,1.0,4.1,-3.1,0,55' + stringFromCharCode(10) + \
            '2023-03-25T12:05:00-07:00,1.0,3.7,-2.7,0,'
    else if arrayLength(url) != null then
        responses = arrayNew()
        foreach url_ in url do
            response = testPowerwallLoadScenario_fetch(url_, options, text)
            arrayPush(responses, response)
        endforeach
        return responses
    endif
    return null
endfunction
testPowerwallFetchOrig = getGlobal('fetch')
fetch = testPowerwallLoadScenario_fetch


async function testPowerwallLoadScenario()
    unittestDeepEquals( \
        powerwallLoadScenario('scenario.json'), \
        objectNew( \
            'name', 'Powerwall Scenario', \
            'batteryCapacity', 40, \
            'backupPercent', 20, \
            'chargeRatio', 0.95, \
            'dischargeRatio', 0.95, \
            'dataURLs', arrayNew('data1.json', 'data2.json'), \
            'data', arrayNew( \
                objectNew( \
                    powerwallFieldDate, '2023-03-25T19:00:00.000Z', \
                    powerwallFieldHome, 1, \
                    powerwallFieldSolar, 4.1, \
                    powerwallFieldPowerwall, -3.1, \
                    powerwallFieldGrid, 0, \
                    powerwallFieldBatteryPercent, 55 \
                ), \
                objectNew( \
                    powerwallFieldDate, '2023-03-25T19:05:00.000Z', \
                    powerwallFieldHome, 1, \
                    powerwallFieldSolar, 3.7, \
                    powerwallFieldPowerwall, -2.7, \
                    powerwallFieldGrid, 0, \
                    powerwallFieldBatteryPercent, 56 \
                ), \
                objectNew( \
                    powerwallFieldDate, '2023-03-25T19:10:00.000Z', \
                    powerwallFieldHome, 1, \
                    powerwallFieldSolar, 4.2, \
                    powerwallFieldPowerwall, -3.2, \
                    powerwallFieldGrid, 0, \
                    powerwallFieldBatteryPercent, 57 \
                ), \
                objectNew( \
                    powerwallFieldDate, '2023-03-25T19:15:00.000Z', \
                    powerwallFieldHome, 1, \
                    powerwallFieldSolar, 5.6, \
                    powerwallFieldPowerwall, -4.6, \
                    powerwallFieldGrid, 0, \
                    powerwallFieldBatteryPercent, 58 \
                ) \
            ) \
        ) \
    )
endfunction
unittestRunTestAsync('testPowerwallLoadScenario')


async function testPowerwallLoadScenario_relative()
    unittestDeepEquals( \
        powerwallLoadScenario('data/scenario3.json'), \
        objectNew( \
            'name', 'Powerwall Scenario 3', \
            'batteryCapacity', 40, \
            'backupPercent', 20, \
            'chargeRatio', 0.95, \
            'dischargeRatio', 0.95, \
            'dataURLs', arrayNew('data/data2.json'), \
            'data', arrayNew( \
                objectNew( \
                    powerwallFieldDate, '2023-03-25T19:00:00.000Z', \
                    powerwallFieldHome, 1, \
                    powerwallFieldSolar, 4.1, \
                    powerwallFieldPowerwall, -3.1, \
                    powerwallFieldGrid, 0, \
                    powerwallFieldBatteryPercent, 55 \
                ), \
                objectNew( \
                    powerwallFieldDate, '2023-03-25T19:05:00.000Z', \
                    powerwallFieldHome, 1, \
                    powerwallFieldSolar, 3.7, \
                    powerwallFieldPowerwall, -2.7, \
                    powerwallFieldGrid, 0, \
                    powerwallFieldBatteryPercent, 55 \
                ) \
            ) \
        ) \
    )
endfunction
unittestRunTestAsync('testPowerwallLoadScenario_relative')


async function testPowerwallLoadScenario_absolute()
    unittestDeepEquals( \
        powerwallLoadScenario('data/scenario4.json'), \
        objectNew( \
            'name', 'Powerwall Scenario 4', \
            'batteryCapacity', 40, \
            'backupPercent', 20, \
            'chargeRatio', 0.95, \
            'dischargeRatio', 0.95, \
            'dataURLs', arrayNew('/data2.json'), \
            'data', arrayNew( \
                objectNew( \
                    powerwallFieldDate, '2023-03-25T19:00:00.000Z', \
                    powerwallFieldHome, 1, \
                    powerwallFieldSolar, 4.1, \
                    powerwallFieldPowerwall, -3.1, \
                    powerwallFieldGrid, 0, \
                    powerwallFieldBatteryPercent, 55 \
                ), \
                objectNew( \
                    powerwallFieldDate, '2023-03-25T19:05:00.000Z', \
                    powerwallFieldHome, 1, \
                    powerwallFieldSolar, 3.7, \
                    powerwallFieldPowerwall, -2.7, \
                    powerwallFieldGrid, 0, \
                    powerwallFieldBatteryPercent, 55 \
                ) \
            ) \
        ) \
    )
endfunction
unittestRunTestAsync('testPowerwallLoadScenario_absolute')


async function testPowerwallLoadScenario_notFound()
    unittestDeepEquals( \
        powerwallLoadScenario('scenarioUnknown.json'), \
        null \
    )
endfunction
unittestRunTestAsync('testPowerwallLoadScenario_notFound')


async function testPowerwallLoadScenario_notFoundData()
    unittestDeepEquals( \
        powerwallLoadScenario('scenario2.json'), \
        null \
    )
endfunction
unittestRunTestAsync('testPowerwallLoadScenario_notFoundData')


# Un-mock fetch
fetch = testPowerwallFetchOrig


#
# powerwallVehicleDeparted tests
#


function testPowerwallVehicleDeparted()
    unittestDeepEquals( \
        powerwallVehicleDeparted( \
            objectNew( \
                'departures', arrayNew( \
                    objectNew( \
                        'id', 'ID-1', \
                        'departure', 9, \
                        'arrival', 11, \
                        'batteryPercentChange', -10 \
                    ), \
                    objectNew( \
                        'id', 'ID-1', \
                        'departure', 18, \
                        'arrival', 21, \
                        'batteryPercentChange', -20 \
                    ) \
                ) \
            ), \
            'ID-1', \
            19 \
        ), \
        objectNew( \
            'id', 'ID-1', \
            'departure', 18, \
            'arrival', 21, \
            'batteryPercentChange', -20 \
        ) \
    )
endfunction
unittestRunTest('testPowerwallVehicleDeparted')


function testPowerwallVehicleDeparted_connected()
    unittestDeepEquals( \
        powerwallVehicleDeparted( \
            objectNew( \
                'departures', arrayNew( \
                    objectNew( \
                        'id', 'ID-1', \
                        'departure', 9, \
                        'arrival', 11, \
                        'batteryPercentChange', -10 \
                    ), \
                    objectNew( \
                        'id', 'ID-1', \
                        'departure', 18, \
                        'arrival', 21, \
                        'batteryPercentChange', -20 \
                    ) \
                ) \
            ), \
            'ID-1', \
            12 \
        ), \
        null \
    )
endfunction
unittestRunTest('testPowerwallVehicleDeparted_connected')


function testPowerwallVehicleDeparted_connected_id()
    unittestDeepEquals( \
        powerwallVehicleDeparted( \
            objectNew( \
                'departures', arrayNew( \
                    objectNew( \
                        'id', 'ID-1', \
                        'departure', 9, \
                        'arrival', 11, \
                        'batteryPercentChange', -10 \
                    ), \
                    objectNew( \
                        'id', 'ID-1', \
                        'departure', 18, \
                        'arrival', 21, \
                        'batteryPercentChange', -20 \
                    ) \
                ) \
            ), \
            'ID-2', \
            19 \
        ), \
        null \
    )
endfunction
unittestRunTest('testPowerwallVehicleDeparted_connected_id')


#
# powerwallValidateVehicleScenario tests
#


function testPowerwallValidateVehicleScenario()
    vehicleScenario = objectNew( \
        'vehicles', arrayNew( \
            objectNew( \
                'id', 'ID-1', \
                'battery', 75, \
                'batteryCapacity', 80, \
                'chargingRate', 5, \
                'chargingLimit', 90, \
                'minChargingRate', 5, \
                'maxChargingRate', 32, \
                'chargingVoltage', 240 \
            ) \
        ), \
        'days', arrayNew( \
            objectNew( \
                'departures', arrayNew( \
                    objectNew( \
                        'id', 'ID-1', \
                        'departure', 9, \
                        'arrival', 11, \
                        'batteryPercentChange', -10 \
                    ), \
                    objectNew( \
                        'id', 'ID-1', \
                        'departure', 18, \
                        'arrival', 21, \
                        'batteryPercentChange', -20 \
                    ) \
                ) \
            ) \
        ) \
    )
    unittestDeepEquals(powerwallValidateVehicleScenario(vehicleScenario), vehicleScenario)
endfunction
unittestRunTest('testPowerwallValidateVehicleScenario')


function testPowerwallValidateVehicleScenario_fail()
    unittestDeepEquals(powerwallValidateVehicleScenario(objectNew()), vehicleScenario)
endfunction
unittestRunTest('testPowerwallValidateVehicleScenario_fail')
